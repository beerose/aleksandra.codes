name: CI
on:
  push:
jobs:
  test-build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 7

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "pnpm"

      - name: Install
        id: install
        run: |
          pnpm install --no-optional --frozen-lockfile ${{ !env.IS_DEPENDABOT }}

      - run: echo ">> ${{ !env.IS_DEPENDABOT }} {{ env.IS_DEPENDABOT }} <<"

      - name: Commit lockfile
        if: ${{ env.IS_DEPENDABOT }}
        uses: EndBug/add-and-commit@v9
        with:
          { add: "pnpm-lock.yaml", fetch: false, message: "Update lockfile" }

      - name: Run linter
        run: pnpm lint --quiet

      - name: Typecheck
        run: pnpm typecheck

      - name: Build
        run: pnpm build
        env:
          OG_IMAGE_SECRET: ${{ secrets.OG_IMAGE_SECRET }}

      - name: Deploy Production to Vercel
        if: github.ref_name == 'main'
        run:
          node .github/scripts/deploy.mjs --token=${{ secrets.VERCEL_TOKEN }}
          --prod

      - name: Deploy Preview to Vercel
        if: github.ref_name != 'main'
        run: node .github/scripts/deploy.mjs --token=${{ secrets.VERCEL_TOKEN }}

      - name: Create GitHub Preview Deployment
        if: github.ref_name != 'main'
        uses: chrnorm/deployment-action@v2
        with:
          token: "${{ github.token }}"
          environment-url: https://${{ env.DEPLOYMENT_ALIAS }} # <- set by deploy.mjs
          environment: Preview
          production-environment: false
          initial-status: success

      - name: Create GitHub Production Deployment
        if: github.ref_name == 'main'
        uses: chrnorm/deployment-action@v2
        with:
          token: "${{ github.token }}"
          environment-url: https://zaduma.vercel.app
          environment: Production
          production-environment: true
          initial-status: success
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  REF_NAME: "${{ github.ref_name }}"
  IS_DEPENDABOT: false # ${{ secrets.IS_DEPENDABOT == 'true' }}
