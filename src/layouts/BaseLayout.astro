---
import InitColorScheme from "../lib/color-scheme/InitColorScheme.astro";
import { Commands } from "../lib/Commands";
import GrainOverlay from "../lib/GrainOverlay/GrainOverlay.astro";
import { Link } from "../lib/Link";
import SocialCardMetaTags from "../lib/SocialCardMetaTags.astro";
import type { PostFrontmatter, TalkFrontmatter } from "../types";

import "../global-styles/base.css";
import "../lib/prose/prose.css";
import "../global-styles/controls.css";
import "../global-styles/integrations.css";
import "../global-styles/font.css";

interface Props {
  title: string;
  activePage: "writing" | "speaking" | "home";
  description?: string;
  children: astroHTML.JSX.Element;
  ogImage?: string;
}

const { title, description, activePage, ogImage } = Astro.props;

const posts = (await Astro.glob<PostFrontmatter>("../../posts/*.mdx"))
  .filter((p) => (import.meta.env.PROD ? !p.frontmatter.draft : true))
  .map((p) => ({
    href: p.frontmatter.path,
    title: p.frontmatter.title,
    date: p.frontmatter.date,
  }));

posts.sort((a, b) => {
  return new Date(b.date).getTime() - new Date(a.date).getTime();
});

const talks = (await Astro.glob<TalkFrontmatter>("../../posts/talks/*.mdx"))
  .map((p) => ({
    href: p.frontmatter.path,
    title: p.frontmatter.title,
    date: p.frontmatter.date,
  }))
  .sort((a, b) => {
    return new Date(b.date).getTime() - new Date(a.date).getTime();
  });
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <script
      type="module"
      src="https://cdn.jsdelivr.net/npm/@justinribeiro/lite-youtube@1.4.0/lite-youtube.js"
    ></script>
    <meta name="viewport" content="width=device-width" />

    <SocialCardMetaTags ogImage={ogImage} />

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>{title}</title>
    <meta
      name="description"
      content={description || "aleksandra's digital garden"}
    />

    <!-- Facebook Meta Tags -->
    <meta property="og:url" content="https://aleksandra.codes/" />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={title} />
    <meta
      property="og:description"
      content={description || "aleksandra's digital garden"}
    />
    <!-- <meta property="og:image" content="" /> -->

    <!-- Twitter Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="aleksandra-codes.vercel.app" />
    <meta property="twitter:url" content="https://aleksandra.codes/" />
    <meta name="twitter:title" content={title} />
    <meta
      name="twitter:description"
      content={description || "aleksandra's digital garden"}
    />
    <!-- <meta name="twitter:image" content="" /> -->

    <InitColorScheme />
  </head>
  <body>
    <div class="mx-auto flex flex-col justify-between">
      <div
        class="grid grid-cols-3 w-full border-b border-gray-400 dark:border-gray-500 text-sm px-1 text-gray-400 dark:text-gray-500"
      >
        <Link
          href="/"
          noUnderline
          class={activePage === "home"
            ? "font-semibold text-gray-600 dark:text-gray-300 mr-auto"
            : "mr-auto"}
        >
          /
        </Link>
        <Link
          href="/writing"
          noUnderline
          class={activePage === "writing"
            ? "font-semibold text-gray-600 dark:text-gray-300 !mx-auto"
            : "!mx-auto"}
        >
          WRITING
        </Link>
        <Link
          href="/speaking"
          noUnderline
          class={activePage === "speaking"
            ? "font-semibold text-gray-600 dark:text-gray-300 ml-auto"
            : "ml-auto"}
        >
          SPEAKING
        </Link>
      </div>
      <header class="flex justify-between mx-1 items-center">
        <slot name="header-content">
          <Link class="text-sm" href="/">‚Üê back</Link>
        </slot>
        <Commands
          hide={activePage === "home"}
          client:load
          talks={talks}
          posts={posts}
        />
      </header>
      <slot />
      <GrainOverlay opacity={1} />
    </div>
  </body>
</html>
