---
import InitColorScheme from "../lib/color-scheme/InitColorScheme.astro";
import { Commands } from "../lib/Commands";
import GrainOverlay from "../lib/GrainOverlay/GrainOverlay.astro";
import { Link } from "../lib/Link";
import type { PostFrontmatter } from "../types";

import "../global-styles/base.css";
import "../global-styles/prose.css";
import "../global-styles/controls.css";
import "../global-styles/integrations.css";
import "../global-styles/font.css";

interface Props {
  title: string;
  children: astroHTML.JSX.Element;
  ogImage?: string;
}

const { title, ogImage } = Astro.props;

const posts = (await Astro.glob<PostFrontmatter>("../../posts/**/*.mdx")).map(
  (p) => ({
    href: p.frontmatter.path,
    title: p.frontmatter.title,
    date: p.frontmatter.date,
  })
);
posts.sort((a, b) => {
  return new Date(a.date).getTime() - new Date(b.date).getTime();
});
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />

    {
      ogImage && (
        <meta property="og:image" content={new URL(ogImage, Astro.url)} />
      )
    }

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <title>{title}</title>
    <InitColorScheme />
  </head>
  <body>
    <div class="max-w-container mx-auto">
      <header
        class="flex justify-between items-center -mt-2"
        style={{ height: "37.5px" }}
      >
        <slot name="header-content">
          <Link href="/">‚Üê back</Link>
        </slot>
        <Commands client:load posts={posts} />
      </header>
      <slot />
      <GrainOverlay opacity={0.25} />
    </div>
  </body>
</html>
