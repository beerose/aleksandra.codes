---
import type { MarkdownInstance } from "astro";

import PostLayout from "../layouts/PostLayout.astro";
import Image from "../lib/Image.astro";
import { Link } from "../lib/Link";
import { OrderedList } from "../lib/OrderedList";
import { createHeading } from "../lib/prose/Heading";
import { Table } from "../lib/prose/Table";
import type { PostFrontmatter } from "../types";

export const getStaticPaths = async () => {
  let posts = await Astro.glob<PostFrontmatter>("../../posts/**/*.mdx");

  if (import.meta.env.PROD) {
    posts = posts.filter((post) => !post.frontmatter.draft);
  }

  return posts.map((post) => {
    return {
      params: {
        path: post.frontmatter.path.replace(/^\//, ""),
      },
      props: post,
    };
  });
};

interface Props extends Omit<MarkdownInstance<{}>, "frontmatter"> {
  frontmatter: PostFrontmatter;
}
const { Content } = Astro.props;

const mdxComponents = {
  a: Link,
  ol: OrderedList,
  h1: createHeading("h1"),
  h2: createHeading("h2"),
  h3: createHeading("h3"),
  h4: createHeading("h4"),
  h5: createHeading("h5"),
  h6: createHeading("h6"),
  img: Image,
  table: Table,
};
---

<PostLayout {...Astro.props} headings={Astro.props.getHeadings()}>
  <Content components={mdxComponents} />
</PostLayout>
