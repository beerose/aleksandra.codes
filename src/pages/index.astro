---
import { Image } from "@astrojs/image/components";

import BaseLayout from "../layouts/BaseLayout.astro";
import { ArrowLink } from "../lib/ArrowLink";
import { Featured } from "../lib/Featured";
import type { PostFrontmatter, TalkFrontmatter } from "../types";

let posts = (await Astro.glob<PostFrontmatter>("../../posts/*.mdx")).filter(
  (p) => !!p.frontmatter.featured
);
if (import.meta.env.PROD) {
  posts = posts.filter((post) => !post.frontmatter.draft);
}

posts.sort((a, b) => {
  return (
    new Date(b.frontmatter.date).getTime() -
    new Date(a.frontmatter.date).getTime()
  );
});

const talks = (await Astro.glob<TalkFrontmatter>("../../posts/talks/*.mdx"))
  .sort((a, b) => {
    return (
      new Date(b.frontmatter.date).getTime() -
      new Date(a.frontmatter.date).getTime()
    );
  })
  .filter((p) => p.frontmatter.youtubeId || p.frontmatter.img)
  .slice(0, 3);
---

<BaseLayout title="aleksandra.codes" activePage="home">
  <h1
    slot="header-content"
    class="text-gray-600 dark:text-gray-400 w-full text-[11vw] text-center text-ad"
  >
    aleksandra.codes
  </h1>
  <main class="space-y-6 border-t border-gray-400 dark:border-gray-500">
    <div
      slot="links"
      class="flex sm:flex-row py-3 sm:pb-6 text-sm italic w-full justify-between px-1"
    >
      <div class="space-y-3 flex flex-col">
        <a
          class="hover:underline underline-offset-4 decoration-1 decoration-gray-500 dark:decoration-gray-400 hover:decoration-wavy"
          href="https://twitter.com/aleksandrasays">@aleksandrasays</a
        >
        <a
          class="hover:underline underline-offset-4 decoration-1 decoration-gray-500 dark:decoration-gray-400 hover:decoration-wavy"
          href="https://github.com/beerose">@beerose</a
        >
      </div>
      <div>Fullstack developer</div>
      <div class="hidden sm:block">Wroc≈Çaw, Poland</div>
    </div>
    <div class="space-y-3">
      <p
        class="font-semibold text-sm text-gray-500 dark:text-gray-400 uppercase"
      >
        Featured blogposts
      </p>
      <ul class="featured grid grid-cols-1 gap-2 sm:gap-6 sm:grid-cols-3">
        {
          posts.map(({ frontmatter }) => {
            const date = new Date(frontmatter.date);
            return (
              <li class="">
                <Featured
                  title={frontmatter.title}
                  date={date}
                  href={frontmatter.path}
                  description={frontmatter.excerpt || ""}
                  tags={frontmatter.tags?.split(",") || []}
                  length={frontmatter.readingTime.text}
                  type="post"
                />
              </li>
            );
          })
        }
      </ul>
      <div>
        <ArrowLink
          title="Go to /writing to see more"
          href="writing"
          class="ml-1"
        />
      </div>
    </div>
    <div>
      <p
        class="mb-3 font-semibold text-sm text-gray-500 dark:text-gray-400 uppercase"
      >
        Latest talks
      </p>
      <ul
        class="featured-talks grid grid-cols-1 gap-2 sm:gap-6 sm:grid-cols-3 mb-2"
      >
        {
          talks.map(({ frontmatter }) => {
            if (frontmatter.youtubeId) {
              return (
                <li>
                  <lite-youtube videoId={frontmatter.youtubeId} />
                </li>
              );
            } else if (frontmatter.img && frontmatter.video) {
              return (
                <li>
                  <a
                    href={frontmatter.video}
                    target="_blank"
                    class="max-w-full sm:max-h-[180px] md:max-h-[230px] xl:max-h-[264px] zaduma-hover-before transition-colors hover:decoration-transparent dark:hover:decoration-transparent"
                  >
                    <div class="relative">
                      <Image
                        alt={frontmatter.title}
                        src={frontmatter.img}
                        format="webp"
                        width={774}
                        aspectRatio={2}
                        class="h-full object-cover"
                      />
                      <div class="left-0 absolute top-0 h-full w-full items-center flex justify-center">
                        <div class="border-[4px] border-white border-solid rounded-full h-24 w-24 items-center flex justify-center p-5 pl-7 bg-gray-800 bg-opacity-60">
                          <svg
                            fill="#fff"
                            xmlns="http://www.w3.org/2000/svg"
                            xmlns:xlink="http://www.w3.org/1999/xlink"
                            viewBox="0 0 58.752 58.752"
                            xml:space="preserve"
                          >
                            <g>
                              <path
                                d="M52.524,23.925L12.507,0.824c-1.907-1.1-4.376-1.097-6.276,0C4.293,1.94,3.088,4.025,3.088,6.264v46.205
                        		c0,2.24,1.204,4.325,3.131,5.435c0.953,0.555,2.042,0.848,3.149,0.848c1.104,0,2.192-0.292,3.141-0.843l40.017-23.103
                        		c1.936-1.119,3.138-3.203,3.138-5.439C55.663,27.134,54.462,25.05,52.524,23.925z M49.524,29.612L9.504,52.716
                        		c-0.082,0.047-0.18,0.052-0.279-0.005c-0.084-0.049-0.137-0.142-0.137-0.242V6.263c0-0.1,0.052-0.192,0.14-0.243
                        		c0.042-0.025,0.09-0.038,0.139-0.038c0.051,0,0.099,0.013,0.142,0.038l40.01,23.098c0.089,0.052,0.145,0.147,0.145,0.249
                        		C49.663,29.47,49.611,29.561,49.524,29.612z"
                              />
                            </g>
                          </svg>
                        </div>
                      </div>
                    </div>
                  </a>
                </li>
              );
            }
          })
        }
      </ul>
      <ArrowLink title="Go to /speaking to see more" href="speaking" />
    </div>
  </main>
  <style>
    .featured:hover li:not(:hover) {
      @apply opacity-50 transition-opacity duration-500;
    }

    .featured-talks:hover li:not(:hover) {
      @apply opacity-50 transition-opacity duration-500;
    }
  </style>
</BaseLayout>
