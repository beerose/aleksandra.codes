---
import BaseLayout from "../layouts/BaseLayout.astro";
import { Dots } from "../lib/Dots";
import { Link } from "../lib/Link";
import type { TalkFrontmatter } from "../types";

const talks = await Astro.glob<TalkFrontmatter>("../../posts/talks/*.mdx");
talks.sort((a, b) => {
  return (
    new Date(a.frontmatter.date).getTime() -
    new Date(b.frontmatter.date).getTime()
  );
});

const talksByYear = talks.reduce(
  (acc, talk) => {
    const year = new Date(talk.frontmatter.date).getFullYear();
    return {
      ...acc,
      [year]: [talk, ...acc[year]],
    };
  },
  { 2023: [], 2022: [], 2021: [], 2020: [], 2019: [] } as any
);
---

<BaseLayout title="aleksandra.codes — speaking" activePage="speaking">
  <div class="mt-2 flex flex-col-reverse md:flex-row md:space-y-0 md:space-x-5">
    <div class="w-full">
      <p
        class="font-semibold text-sm text-gray-500 dark:text-gray-400 uppercase"
      >
        All talks
      </p>
      <ul class="ml-10 flex flex-col space-y-1 mb-4">
        {
          Object.keys(talksByYear)
            .sort((a, b) => (a < b ? 1 : -1))
            .filter((year) => talksByYear[year].length > 0)
            .map((year) => (
              <div class="flex flex-col relative">
                <h1 class="-ml-10 text-3xl py-2 bg-inherit font-bold text-gray-300 dark:text-gray-500 h-[45px]">
                  {year}
                </h1>
                <Dots className="top-[45px]" />
                {talksByYear[year].map(
                  ({ frontmatter }: { frontmatter: TalkFrontmatter }) => {
                    const date = new Date(frontmatter.date);
                    return (
                      <li class="ml-4 my-3">
                        <div class="flex space-x-1 text-gray-600 dark:text-gray-400 text-xs -translate-x-14 my-3 absolute">
                          <time datetime={date.toLocaleDateString()}>
                            {date.toLocaleString("en-US", {
                              month: "short",
                              day: "numeric",
                            })}
                          </time>
                        </div>
                        <div class="flex flex-col space-y-2">
                          <Link
                            href={frontmatter.path}
                            class="flex flex-row gap-2 justify-between w-fit !whitespace-normal"
                            noUnderline
                          >
                            <div class="text-gray-800 dark:text-gray-300 font-sans font-bold text-base">
                              {frontmatter.title}
                            </div>
                          </Link>
                          <div class="text-xs">
                            {frontmatter.event}
                            <span> · </span>
                            {frontmatter.place}
                            <span> · </span>
                            {frontmatter.duration} min
                            <span> · </span>
                            {frontmatter.type}
                          </div>
                          <div>
                            {frontmatter.video && (
                              <a
                                class={
                                  "hover:translate-x-1 hover:underline underline-offset-4 decoration-gray-500 decoration-1 duration-100 whitespace-nowrap rounded-sm text-xs text-gray-600 dark:text-gray-400 no-underline"
                                }
                                href={frontmatter.video}
                              >
                                <span>Recording ↗</span>
                              </a>
                            )}
                            {frontmatter.slides && (
                              <a
                                class={
                                  "hover:translate-x-1 hover:underline underline-offset-4 decoration-gray-500 decoration-1 duration-100 whitespace-nowrap rounded-sm text-xs text-gray-600 dark:text-gray-400 no-underline"
                                }
                                href={frontmatter.slides}
                              >
                                <span>Slides ↗</span>
                              </a>
                            )}
                          </div>
                          <div class="flex flex-row space-x-2 items-center my-1">
                            {frontmatter.tags?.split(",").map((tag) => (
                              <span class="text-xs tracking-wide text-gray-600 dark:text-gray-300">
                                #{tag.trim()}
                              </span>
                            ))}
                          </div>
                        </div>
                      </li>
                    );
                  }
                )}
              </div>
            ))
        }
      </ul>
    </div>
    <!-- <div class="w-3/5">
      <p
        class="mb-3 font-semibold text-sm text-gray-500 dark:text-gray-400 uppercase"
      >
        Talks I'm most proud of
      </p>
      <ul class="grid grid-cols-1 xs:grid-cols-2 gap-2 md:grid-cols-1">
        {
          talks
            .filter((p) => !!p.frontmatter.featured)
            .map(({ frontmatter }) => {
              const date = new Date(frontmatter.date);
              return (
                <li class="">
                  <Featured
                    title={frontmatter.title}
                    date={date}
                    href={frontmatter.path}
                    description={frontmatter.excerpt}
                    tags={frontmatter.tags?.split(",") || []}
                    length={frontmatter.duration.toString()}
                    type="post"
                  />
                </li>
              );
            })
        }
      </ul>
    </div> -->
  </div>
</BaseLayout>
