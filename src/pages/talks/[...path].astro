---
import type { MarkdownInstance } from "astro";

import TalkLayout from "../../layouts/TalkLayout.astro";
import { Link } from "../../lib/Link";
import { Blockquote } from "../../lib/prose/Blockquote";
import { Code, Pre } from "../../lib/prose/code-and-pre";
import { createHeading } from "../../lib/prose/Heading";
import { Ol } from "../../lib/prose/Ol";
import { Paragraph } from "../../lib/prose/Paragraph";
import { Table } from "../../lib/prose/Table";
import { Ul } from "../../lib/prose/Ul";
import type { TalkFrontmatter } from "../../types";

export const getStaticPaths = async () => {
  const talks = await Astro.glob<TalkFrontmatter>("../../../posts/talks/*.mdx");

  return talks.map((post) => {
    return {
      params: {
        path: post.frontmatter.path.replace(/^\//, ""),
      },
      props: post,
    };
  });
};

interface Props extends Omit<MarkdownInstance<{}>, "frontmatter"> {
  frontmatter: TalkFrontmatter;
}

const mdxComponents = {
  a: Link,
  h1: createHeading("h1"),
  h2: createHeading("h2"),
  h3: createHeading("h3"),
  h4: createHeading("h4"),
  h5: createHeading("h5"),
  h6: createHeading("h6"),
  img: Image,
  table: Table,
  ul: Ul,
  ol: Ol,
  blockquote: Blockquote,
  code: Code,
  pre: Pre,
  // Take note that `mdxComponents` replace only Markdown and uppercased components,
  // not inline lowercased JSX, so using `<p>` in and .mdx file won't use the `Paragraph`.
  p: Paragraph,
};

const { Content } = Astro.props;
---

<TalkLayout {...Astro.props} headings={Astro.props.getHeadings()}>
  <Content components={mdxComponents} />
</TalkLayout>
